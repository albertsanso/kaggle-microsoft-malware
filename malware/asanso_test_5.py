# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

pd.set_option('display.max_columns', 600)
pd.set_option('display.width', None)
pd.set_option('display.line_width', 200)


dfTrain=pd.read_csv('datasets/definitive/train/segments_relative_size_10868samples.csv')
dfTest=pd.read_csv('datasets/definitive/test/segments_relative_size_10868samples.csv')


df = pd.concat([dfTrain, dfTest], axis=0).fillna(0)

dfTrainExt = df.loc[df['category'] > 0]
dfTestExt = df.loc[df['category'] == 0]


category = dfTrainExt['category']
sampleId = dfTrainExt['sample_id']

dfTrainExt.drop(labels=['category'], axis=1,inplace = True)
dfTrainExt.drop(labels=['sample_id'], axis=1,inplace = True)
dfTrainExt.drop(labels=['Unnamed: 0'], axis=1,inplace = True)

dfTrainExt.insert(0, 'sample_id', sampleId)
dfTrainExt['category']=category


category = dfTestExt['category']
sampleId = dfTestExt['sample_id']

dfTestExt.drop(labels=['category'], axis=1,inplace = True)
dfTestExt.drop(labels=['sample_id'], axis=1,inplace = True)
dfTestExt.drop(labels=['Unnamed: 0'], axis=1,inplace = True)

dfTestExt.insert(0, 'sample_id', sampleId)
dfTestExt['category']=category


#print dfTrainExt.head()
#print dfTestExt.head()

#print dfTrainExt['category'].head()
#print dfTestExt['category'].head()



print np.shape(df)
print np.shape(dfTrainExt)
print np.shape(dfTestExt)

"""
print dfTrainExt.columns



dfTrainExt.to_csv('datasets/definitive/train/segments_relative_size_10868samples_union.csv', index=False)
dfTestExt.to_csv('datasets/definitive/test/segments_relative_size_10868samples_union.csv', index=False)
"""


"""
trainSegmentsArray = dfTrain.columns.values
testSegmentsArray = dfTest.columns.values

trainSegmentsList = list(trainSegmentsArray)
testSegmentsList = list(testSegmentsArray)

commonSegments = list(set(trainSegmentsList) & set(testSegmentsList))

for colName in dfTrain.columns.values:
    if colName not in commonSegments:
        dfTrain.drop(colName,inplace=True,axis=1)
        
for colName in dfTest.columns.values:
    if colName not in commonSegments:
        dfTest.drop(colName,inplace=True,axis=1)


trainColumns = dfTrain.columns.tolist()
testColumns = dfTest.columns.tolist()

arrangedTrainColumns = trainColumns[0:2] + sorted(trainColumns[2:-1]) + trainColumns[-1:]
arrangedTestColumns = testColumns[0:2] + sorted(testColumns[2:-1]) + testColumns[-1:]

dftr = dfTrain[arrangedTrainColumns]
dfts = dfTest[arrangedTestColumns]

#print dftr.head()
#print dfts.head()

#dftr.to_csv('datasets/definitive/train/segments_relative_size_10868samples_shorted.csv')
#dfts.to_csv('datasets/definitive/test/segments_relative_size_10868samples_shorted.csv')

"""