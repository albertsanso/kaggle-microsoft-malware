# -*- coding: utf-8 -*-

# 2014/10/21  18:02 
# repassant sessió 2 i 3
import pandas as pd
import numpy as np
import seaborn as sns
#from os import listdir
#from os.path import isfile, join
import os
import matplotlib.pyplot as plt

############## Càlcul número de fitxers de train de cada classe  
setfiles = pd.read_csv("C:/Users/Jordi/Documents/kaggle_malware/CSV/trainLabels.csv")
setfiles.head()
dist_Setfiles = setfiles.groupby('Class').count()


#dist_Setfiles.plot(kind = 'bar', title = 'Train class Universe')
plt.plot(dist_Setfiles)
print dist_Setfiles


dist_Setfiles.plot(kind = 'bar')

#dist_Setfiles.plot(kind = 'density')



############## Càlcul mida de cada fitxer
fileSize = pd.DataFrame(columns = ['Id_ext', 'Id', 'size'])
root = "D:/train"

i = 0
for path, dirs, files in os.walk(root):
    for f in files:
        #print path, f, os.path.getsize( os.path.join( path, f ) )
        fileSize.loc[i] = [f, f[0:len(f)-4], os.path.getsize( os.path.join( path, f ))]
        #print fileSize.loc[i]
        #print f        
        i = i+1

print fileSize.head()   
fileSize.shape
fileSize.to_csv("C:/Users/Jordi/Documents/kaggle_malware/work/malware/datasets/definitive/train/sizeFilesTrain.csv")
                      


############# fem una join de la classe del fitxer amb la seva mida
data = pd.merge(setfiles,fileSize, how = 'left', left_on = 'Id', right_on = 'Id')
print data
size_class = data.groupby('Class', as_index=False).mean()
size_class = data.groupby('Class').mean()

size_class.plot(kind = 'bar', title = 'Train class size mean')


############ resum de la mida de cada classe
for i in range(1,10):
    print "Classe", i, "\n"
    print data[data.Class == i].describe()

########### histogrames de la mida de cada classe
#plt.figure()
for i in range(1,10):
    #data[data.Class == i].hist(column = 'size', normed = 1)
    #data[data.Class == i].hist(column = 'size', normed = True)
    data[data.Class == i].hist(column = 'size')
#plt.show()



##########  boxplot size class
data.boxplot(by='Class')
data.boxplot(by='Class', showmeans = True)
data.boxplot(by='Class', showmeans = True, meanline = True)
data.boxplot(by='Class', showmeans = True, meanline = True, showfliers = True)
data.boxplot(by='Class', showmeans = True, meanline = True, showfliers = False)
data.boxplot(by='Class', showmeans = True, meanline = True, notch = True)
######### boxplot sense la classe 2
# sense outliers
data[data.Class != 2].boxplot(by = 'Class', showmeans = True, meanline = True, showfliers = False)

# amb outliers
data[data.Class != 2].boxplot(by = 'Class',)

########## boxplot classe 2
data[data.Class == 2].boxplot(by = 'Class',showmeans = True, meanline = True, showfliers = True)

############ altres proves. 
for i in range(1,10):
    plt.boxplot(data[data.Class == i]['size'])
    
 
plt.boxplot(data[data.Class == 1]['size'])    
plt.boxplot(data[data.Class == 1]['size'], showmeans = True)
plt.boxplot(data[data.Class == 1]['size'], showmeans = True, meanline = True)

plt.boxplot(data[data.Class == 2]['size'], showmeans = True, meanline = True)

data.tail()


data.head()
data[['Id', 'Class']]
data[data.Class ==4][['Id','size']]

vec1 = []
for i in data[data.Class == 1]['size']:
    vec1.append(i)
    

    
plt.boxplot(vec1)
print data[data.Class == 1].describe()    

vec2 = []
for i in data[data.Class == 2]['size']:
    vec2.append(i)
    
plt.boxplot(vec2)
print data[data.Class == 2].describe()  


data_prova = data[['Class', 'size']]

data.boxplot(by='Class')


############ altres proves. histogrames de cada classe
plots = pd.DataFrame()

for j in range(1,10):
    vec = [] 
    for i in data[data.Class == j]['size']:
        vec.append(i)
    plt.boxplot(vec)
    

