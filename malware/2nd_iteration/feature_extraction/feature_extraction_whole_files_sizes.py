# -*- coding: utf-8 -*-

import csv
import random
import os
import os.path
import re

from collections import Counter

import pandas as pd
import numpy as np

def getSamples(seed, bucketSize, descriptorPath):    
    samplesStruct = {'my_hash':{}, 'my_list':[]}
    
    random.seed(seed)
    
    csvfile = open(descriptorPath, 'rb')
    samples = csv.reader(csvfile, delimiter=',')
    
    for row in samples:
        
        sampleName = row[0]
        sampleCategory = row[1]
        samplesStruct['my_hash'][sampleName] = sampleCategory
        samplesStruct['my_list'].append(sampleName)
        
    if (bucketSize > len(samplesStruct['my_list'])):
        bucketSize = len(samplesStruct['my_list'])
        
    samplesStruct['my_list'] = random.sample(samplesStruct['my_list'], bucketSize)
    
    return samplesStruct
    
def getStats_FromFile(folder,sampleId):
    
    filePath = folder + "/" + sampleId
    
    asmSize = 0
    bytesSize = 0
    
    if os.path.exists(filePath + ".asm"):
        asmSize = os.path.getsize(filePath + ".asm")
    if os.path.exists(filePath + ".bytes"):
        bytesSize = os.path.getsize(filePath + ".bytes")
    
    sizes = []
    sizes.append(asmSize)
    sizes.append(bytesSize)   
    
    return sizes
    
def launch(theSeed, samplesNumber, descriptorPath, folder, outputName):
    samples = getSamples(theSeed, samplesNumber, descriptorPath)
    samplesDone = 0
    
    statsList = []
    for sampleId in samples['my_list']:
        stat = getStats_FromFile(folder, sampleId)
        stat.insert(0, sampleId)
        stat.append(samples['my_hash'][sampleId])
        statsList.append(stat)
        
        pcDone = (float(samplesDone)/samplesNumber)*100
        print "Samples parsed Percent: "+str(pcDone)
        samplesDone += 1
        
    print np.asarray(statsList)
    
    columnNames = ['id', 'asm_size', 'bytes_size', 'category']
    values = np.asarray(statsList)
    df = pd.DataFrame(data=values, columns=columnNames)
    
    df.to_csv(outputName, index=False)
    

# ------------------------------------------------------------------------

def extractTrainFeatures():
    seed = "my_seed"    
    folder = "D:/datamandanga/train"
    samplesNumber = 11000
    descriptor = "../../resource/trainLabels.csv"
    outputName = "../datasets/single/train/files_sizes_train.csv"
    
    launch(seed, samplesNumber, descriptor, folder,outputName)
    
def extractTestFeatures():
    seed = "my_seed"    
    folder = "D:/datamandanga/test"
    samplesNumber = 11000
    descriptor = "../../resource/testLabels.csv"
    outputName = "../datasets/single/test/files_sizes_test.csv"
    
    launch(seed, samplesNumber, descriptor, folder,outputName)


extractTrainFeatures()
extractTestFeatures()








